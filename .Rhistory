install.packages('quantmod')
library(quantmod)
getSymbols('ND000334Q',src='FRED')
getSymbols('ND000335Q', src='FRED')
getSymbols('ND000349Q' , src='FRED')
REALPCE <- ND000349Q
names(REALPCE)[1]<- 'REALPCE'
REALGPDI <- ND000335Q
names(REALGPDI)[1]<- 'REALGPDI'
REALGDP <- ND000334Q
names(REALGDP)[1] <- 'REALGDP'
LOGREALPCE <- log(REALPCE)
PCEtable <- merge(LOGREALPCE, REALPCE)
LOGREALGDP <- log(REALGDP)
GDPtable <- merge(LOGREALGDP, REALGDP)
LOGREALGPDI <- log(REALGPDI)
GPDItable <- merge(LOGREALGPDI, REALGPDI)
PC_LOGREALGDP <- diff(log(REALGDP), lag=1, differences=1)
PC_LOGREALGPDI <- diff(log(REALGPDI), lag=1, differences=1)
PC_LOGREALPCE <- diff(log(REALPCE), lag=1, differences=1)
GPDItable <- merge(REALGPDI, LOGREALGPDI, PC_LOGREALGPDI)
GDPtable <- merge(REALGDP, LOGREALGDP, PC_LOGREALGDP)
PCEtable <- merge(REALPCE, LOGREALPCE, PC_LOGREALPCE)
names(GDPtable)[2] <- 'GDPlog'
names(GDPtable)[3] <- 'GDPpc'
names(GPDItable)[2] <- 'GPDI_log'
names(GPDItable)[3]<- 'GPDIpc'
names(PCEtable)[2]<- 'PCElog'
names(PCEtable)[3]<- 'PCEpc'
install.packages('tseries')
library(tseries)
adf.test(REALGDP, alternative = c("stationary", "explosive"),
k = trunc((length(REALGDP)-1)^(1/3)))
adf.test(LOGREALGDP, alternative = c("stationary", "explosive"),
k = trunc((length(LOGREALGDP)-1)^(1/3)))
adf.test(PC_REALGDP, alternative = c("stationary", "explosive"),
k = trunc((length(PC_REALGDP)-1)^(1/3)))
resultsGDP <- lm(diff(PC_LOGREALGDP)~lag(PC_LOGREALGDP))
summary(resultsGDP)
plot(PC_LOGREALGDP)
plot(PC_LOGREALPCE)
plot(PC_LOGREALGPDI)
arma(na.exclude(PC_LOGREALGDP), order = c(0,4))
arma(na.exclude(PC_LOGREALGPDI), order = c(0,4))
arma(na.exclude(PC_LOGREALPCE), order = c(0,4))
arma(na.exclude(PC_LOGREALGDP), order = c(1,4))
arma(na.exclude(PC_LOGREALGPDI), order = c(1,4))
arma(na.exclude(PC_LOGREALPCE), order = c(1,4))
pacf(na.exclude(PC_LOGREALPCE), order = c(1,4))
acf(na.exclude(PC_LOGREALPCE), order = c(1,4))
pacf(na.exclude(PC_LOGREALGDP), order = c(1,4))
acf(na.exclude(PC_LOGREALGDP), order = c(1,4))
pacf(na.exclude(PC_LOGREALGPDI), order = c(1,4))
acf(na.exclude(PC_LOGREALGPDI), order = c(1,4))
arima(na.exclude(PC_LOGREALPCE), order = c(2,0,4))
arima(na.exclude(PC_LOGREALGDP), order = c(2,0,4))
arima(na.exclude(PC_LOGREALGPDI), order = c(2,0,4))
garch(x = na.exclude(PC_LOGREALGDP), order = c(1, 1), series = NULL)
summary(garch(x = na.exclude(PC_LOGREALGDP), order = c(1, 1), series = NULL))
ALL <- merge(REALGDP, REALPCE, REALGPDI)
install.packages('vars')
library(vars)
VAR(ALL, p=2)
summary(VAR(ALL, p=2))
VAR(ALL, p=3)
VAR(ALL, p=3)
summary(VAR(ALL, p=3))
?sub
setwd("~/Google Drive (rselby@emporia.edu)")
setwd("~/Documents/GitHub/teaching-expo-2019")
# Chunk 1
#setwd("C:/Users/rselby/Google Drive/GitHub/Econometrics/teaching-expo-2019")
knitr::opts_chunk$set(warning=F,message=F)
# Chunk 2
print("The equation $$Y_t = X_t + \varepsilon_t $$ renders to")
# Chunk 3
x<-c("Hello","World")
x
# Chunk 4
x<-c("Hello","World")
x
# Chunk 5
x<-c("Hello","World")
x
# Chunk 6
mean(cars$speed)
# Chunk 7
head(cars,10)
# Chunk 8
plot(cars)
# Chunk 9
#install.packages("psych")
library(psych)
describe(cars,skew = F,trim = 0,IQR = T)
# Chunk 10
hist(cars$speed)
# Chunk 11
#install.packages("learnr")
library(learnr)
# Chunk 12: mean
# Calculate the average speed of cars. Save as an object called `mean`
# Chunk 13: mean-solution
mean<-mean(cars$speed)
# Chunk 14
library(plotly)
m <- list(
l = 50,
r = 50,
b = 100,
t = 100,
pad = 4
)
# Chunk 15
p <- plot_ly(cars, x = ~speed, y = ~dist)
p
# Chunk 16
plot_ly(x = cars$speed, type = "histogram")
# Chunk 17
plot_ly(x = cars$speed, type = "box")
# Chunk 18
p <- plot_ly(x=cars$speed,y=cars$dist)
pp <- subplot(
p %>% add_markers(alpha = 0.2),
p %>% add_histogram2d()
)
pp
(scatter <- plot_ly(cars, x = ~speed, y = ~dist))
plot<-plot_ly(x=cars$speed,y=cars$dist)
(subplot(
plot %>% add_markers(alpha = 0.2),
plot %>% add_histogram2d()
))
